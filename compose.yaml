services:
  postgres:
    image: postgres:16-alpine
    container_name: paperless-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-paperless}

  adminer:
    image: adminer:4.8.1
    container_name: paperless-adminer
    depends_on: [ postgres ]
    ports:
      - "9091:8080"
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:4.1.4-management
    container_name: paperless-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
    restart: unless-stopped

  minio:
    image: minio/minio:RELEASE.2025-07-23T15-54-02Z
    container_name: paperless-minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    healthcheck:
      test: curl -f http://localhost:9000/minio/health/live
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.1.3
    container_name: paperless-elasticsearch
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: curl -fsSL http://localhost:9200 >/dev/null || exit 1
      interval: 15s
      timeout: 10s
      retries: 10
    restart: unless-stopped

  paperlessrest:
    image: paperlessrest
    container_name: paperless-rest
    build:
      context: .
      dockerfile: PaperlessREST/Dockerfile
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped


  paperlessservices:
    image: paperlessservices
    container_name: paperless-services
    build:
      context: .
      dockerfile: PaperlessServices/Dockerfile
    env_file: .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped

  nginx:
    image: nginx:stable
    container_name: paperless-nginx
    depends_on:
      - paperlessrest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./PaperlessREST/wwwroot:/usr/share/nginx/html:ro
    restart: unless-stopped

volumes:
  postgres_data:
  minio_data:
  rabbitmq_data:
  elasticsearch_data: